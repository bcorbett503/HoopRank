name: Release Backend Image

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Optional image tag (defaults to manual-<shortsha>)"
        required: false
        default: ""

permissions:
  id-token: write
  contents: read

env:
  # --- UPDATE ONLY IF YOUR ACCOUNT/REGION/REPO CHANGE ---
  ECR_REGISTRY: 066396399970.dkr.ecr.us-east-2.amazonaws.com
  ECR_REPOSITORY: hooprank-backend
  AWS_REGION: ${{ vars.AWS_REGION }}          # us-east-2 (you set this)
  PUSH_TO_ECR: ${{ vars.PUSH_TO_ECR }}        # "true" or "false"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Compute TAG and image names
        id: meta
        run: |
          TAG="${{ github.event.inputs.tag }}"
          if [ -z "$TAG" ]; then TAG="manual-${GITHUB_SHA::7}"; fi
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "LOCAL_IMAGE=local/backend:$TAG" >> $GITHUB_ENV
          echo "ECR_IMAGE=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:$TAG" >> $GITHUB_ENV
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "ecr_image=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:$TAG" >> $GITHUB_OUTPUT

      # Assume AWS role only if we intend to push
      - name: Configure AWS credentials (for ECR push)
        if: env.PUSH_TO_ECR == 'true'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        if: env.PUSH_TO_ECR == 'true'
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: true

      - name: Docker build (tags local + ECR) and load
        run: |
          docker buildx build \
            --file backend/Dockerfile \
            --tag "$LOCAL_IMAGE" \
            --tag "$ECR_IMAGE" \
            --load \
            backend

      - name: Push to ECR
        if: env.PUSH_TO_ECR == 'true'
        run: docker push "$ECR_IMAGE"

      - name: Save image as artifact
        run: docker save "$LOCAL_IMAGE" -o backend-image.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-image-${{ steps.meta.outputs.tag }}
          path: backend-image.tar

      - name: Summary
        run: |
          echo "Built tag: $TAG" >> $GITHUB_STEP_SUMMARY
          echo "Local image: $LOCAL_IMAGE" >> $GITHUB_STEP_SUMMARY
          echo "ECR image: $ECR_IMAGE" >> $GITHUB_STEP_SUMMARY
