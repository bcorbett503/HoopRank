name: Release Backend Image

on:
  push:
    tags: ['v*.*.*']
  workflow_dispatch:

jobs:
  build-and-optional-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      AWS_REGION: ${{ vars.AWS_REGION || 'us-east-2' }}
      ECR_REPO: hooprank-backend
      PUSH_TO_ECR: ${{ vars.PUSH_TO_ECR || 'false' }}
      AWS_ROLE_ARN: ${{ vars.AWS_ROLE_ARN || '' }}
    steps:
      - uses: actions/checkout@v4

      - name: Compute image tag
        id: meta
        shell: bash
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            echo "tag=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"
          else
            echo "tag=manual-${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"
          fi

      # Build the Docker image (multi-stage compiles TS inside)
      - name: Build Docker image
        run: docker build -t local/backend:${{ steps.meta.outputs.tag }} backend

      - name: Save image as artifact
        run: docker save local/backend:${{ steps.meta.outputs.tag }} -o backend-image.tar

      - uses: actions/upload-artifact@v4
        with:
          name: backend-image-${{ steps.meta.outputs.tag }}
          path: backend-image.tar

      # --- ECR push (only if enabled by repo variables) ---
      - name: Configure AWS (OIDC)
        if: env.PUSH_TO_ECR == 'true'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        if: env.PUSH_TO_ECR == 'true'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Debug ECR registry
        if: env.PUSH_TO_ECR == 'true'
        run: echo "ECR registry is: ${{ steps.login-ecr.outputs.registry }}"

      - name: Push to ECR
        if: env.PUSH_TO_ECR == 'true'
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        shell: bash
        run: |
          if [[ -z "$REGISTRY" ]]; then
            echo "ECR login did not return a registry. Check AWS_ROLE_ARN, region, and OIDC trust."; exit 1
          fi
          IMAGE="$REGISTRY/${{ env.ECR_REPO }}:${{ steps.meta.outputs.tag }}"
          docker tag local/backend:${{ steps.meta.outputs.tag }} "$IMAGE"
          docker push "$IMAGE"
          echo "Pushed $IMAGE"
